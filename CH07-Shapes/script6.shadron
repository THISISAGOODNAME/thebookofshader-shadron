parameter ivec2 iResolution = ivec2(256, 256) : hidden();

// Number of sides of your shape
parameter int N = 3 : range(3, 20);

#define PI 3.14159265359
#define TWO_PI 6.28318530718

// Reference to
// http://thndl.com/square-shaped-shaders.html
glsl vec4 mainImage(vec2 position) {
    vec2 st = gl_FragCoord.xy/iResolution;
    st.x *= iResolution.x/iResolution.y;
    vec3 color = vec3(0.0);
    float d = 0.0;

    // Remap the space to -1. to 1.
    st = st *2.-1.;

    // Angle and radius from the current pixel
    float a = atan(st.x,st.y)+PI;
    float r = TWO_PI/float(N);
  
    // Shaping function that modulate the distance
    d = cos(floor(.5+a/r)*r-a)*length(st);

    color = vec3(1.0-smoothstep(.4,.41,d));
    // color = vec3(d);
    vec4 fragColor = vec4(color, 1.0);
    return fragColor;
}

animation  MyImage  = glsl(mainImage, iResolution.x, iResolution.y);